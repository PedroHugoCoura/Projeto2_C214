name: Run PHPUnit Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  push:
    tags:
      - "*"

jobs:
  install-dependencies:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, xml, xdebug
          coverage: xdebug

      - name: Install Composer
        run: curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

      - name: Install dependencies
        run: composer install --prefer-dist

  phpunit-tests:
    runs-on: ubuntu-latest
    needs: install-dependencies
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, xml, xdebug
          coverage: xdebug

      - name: Install Composer
        run: curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
  
      - name: Install dependencies
        run: composer install --prefer-dist

      - name: Verify vendor folder
        run: ls -la vendor

      - name: Run PHPUnit Tests
        run: |
          mkdir -p reports
          php vendor/bin/phpunit --log-junit reports/report.xml tests/IMCtest.php

      - name: Publish test results
        uses: actions/upload-artifact@v4
        with:
          name: junit-report
          path: reports/report.xml

      - name: Verify tests passed
        run: |
          if grep -q '<failure' reports/report.xml; then
            echo "Tests failed!"
            exit 1
          else
            echo "Tests passed successfully!ðŸ˜‰"
          fi

  package-project:
    runs-on: ubuntu-latest
    needs: phpunit-tests
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, xml, xdebug
          coverage: xdebug

      - name: Package Project
        run: |
          mkdir build
          rsync -av --exclude='build' --exclude='.git' --exclude='.github' ./ build/
          cd build
          rm -rf tests .git .github
          zip -r ../php-project.zip .
          cd ..

      - name: Create Git Tag
        run: |
          TAG_NAME="v$(date +'%Y%m%d%H%M%S')"
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git tag $TAG_NAME
          git push origin $TAG_NAME
       
      - name: Upload Artifact
        if: startsWith(github.ref, 'refs/tags/')
        uses: actions/upload-artifact@v3
        with:
          name: ${{ github.ref_name }}
          path: php-project.zip
