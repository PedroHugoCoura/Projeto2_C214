name: Run PHPUnit Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  install-dependencies:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, xml, xdebug
          coverage: xdebug

      - name: Clear Composer cache
        run: composer clear-cache

      - name: Install dependencies
        run: |
          curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

      - name: List installed Composer packages
        run: composer show

  phpunit-tests:
    runs-on: ubuntu-latest
    needs: install-dependencies
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Verify vendor folder
        run: ls -la vendor/phpunit/phpunit

      - name: Give execute permissions to PHPUnit
        run: chmod +x vendor/bin/phpunit

      - name: Create reports directory
        run: mkdir -p reports

      - name: Run PHPUnit Tests
        run: |
          vendor/bin/phpunit --log-junit reports/report.xml

      - name: Verify reports directory and file
        run: |
          echo "Conte√∫do da pasta 'reports':"
          ls -la reports
          echo "Verificando se o arquivo report.xml existe:"
          ls -la reports/report.xml
      
      - name: Publicar resultados dos testes
        uses: actions/upload-artifact@v3
        with:
          name: junit-report
          path: reports/report.xml
  
      - name: Verificar se os testes passaram
        run: |
          if grep -q '<failure' reports/report.xml; then
            echo "Testes falharam!"
            exit 1
          else
            echo "Testes passaram com sucesso!üòâ"
          fi
    
  package-project:
    runs-on: ubuntu-latest
    needs: phpunit-tests
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Package Project
        run: |
          mkdir build
          rsync -av --exclude='build' --exclude='.git' --exclude='.github' ./ build/
          cd build
          rm -rf tests .git .github
          zip -r ../php-project.zip .
          cd ..